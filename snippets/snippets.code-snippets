{
    "luaSnippet": {
        "prefix": "print",
        "body": [
            "print(\"${1:Your Output here}\")"
        ],
        "description": "Prints a message to the output console"
    },
    "Wait for Seconds": {
        "prefix": "wait",
        "body": [
            "wait(${1:Seconds})"
        ],
        "description": "Waits for a specified number of seconds"
    },
    "Print Statement": {
        "prefix": "print",
        "body": [
            "print(\"${1:Hello, world!}\")"
        ],
        "description": "Prints a message to the output console"
    },
    "Player Touched Event": {
        "prefix": "touched",
        "body": [
            "script.Parent.Touched:Connect(function(hit)",
            "\t-- Your code here",
            "end)"
        ],
        "description": "Handles player touching a part"
    },
    "Change Color of Part": {
        "prefix": "color",
        "body": [
            "script.Parent.Color = Color3.fromRGB(${1:R}, ${2:G}, ${3:B})"
        ],
        "description": "Changes the color of a part"
    },
    "Teleport Player to Position": {
        "prefix": "teleport",
        "body": [
            "game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(${1:X}, ${2:Y}, ${3:Z}))"
        ],
        "description": "Teleports the player to a specified position"
    },
    "Create a New Part": {
        "prefix": "newpart",
        "body": [
            "local part = Instance.new(\"Part\")",
            "part.Parent = workspace",
            "part.Position = Vector3.new(${1:X}, ${2:Y}, ${3:Z})",
            "-- Add more properties as needed",
            "return part"
        ],
        "description": "Creates a new part at a specified position"
    },
    "Check if Player is Admin": {
        "prefix": "isadmin",
        "body": [
            "local isAdmin = game.Players.LocalPlayer.UserId == ${1:AdminUserID}",
            "-- Replace AdminUserID with the actual user ID of the admin",
            "if isAdmin then",
            "\t-- Player is admin, execute admin-specific code here",
            "else",
            "\t-- Player is not admin, execute non-admin code here",
            "end"
        ],
        "description": "Checks if the player is admin"
    },
    "Give Avatar Items": {
        "prefix": "giveavataritems",
        "body": [
            "-- Lua script to give avatar items to a user in Roblox",
            "local Players = game:GetService(\"Players\")",
            "",
            "-- Function to give avatar items to a player",
            "local function GiveAvatarItems(player)",
            "    -- Put the asset IDs of the items you want to give here",
            "    local itemIDs = {",
            "        ${1:itemId}, -- Replace with the actual asset IDs of the items",
            "        ${2:itemId}, -- Replace with the actual asset IDs of the items",
            "        -- Add more item IDs as needed",
            "    }",
            "",
            "    -- Loop through the item IDs and give them to the player",
            "    for _, itemID in ipairs(itemIDs) do",
            "        -- Check if the item exists",
            "        local success, item = pcall(function()",
            "            return game:GetService(\"MarketplaceService\"):GetProductInfo(itemID)",
            "        end)",
            "        ",
            "        if success then",
            "            -- Give the item to the player",
            "            player.CharacterAppearance = itemID",
            "            print(\"Gave item with ID:\", itemID, \"to player:\", player.Name)",
            "        else",
            "            warn(\"Failed to give item with ID:\", itemID, \"to player:\", player.Name)",
            "        end",
            "    end",
            "end",
            "",
            "-- Give items to all players when the script is executed",
            "for _, player in ipairs(Players:GetPlayers()) do",
            "    GiveAvatarItems(player)",
            "end",
            "",
            "-- Give items to players who join after the script is executed",
            "Players.PlayerAdded:Connect(GiveAvatarItems)"
        ],
        "description": "Lua script to give avatar items to a user in Roblox"
    },
    "Kick Player": {
        "prefix": "kickplayer",
        "body": [
            "-- Lua script to kick a player from the game",
            "local playerToKick = game.Players:FindFirstChild(\"${1:PlayerNameHere}\")",
            "",
            "-- Check if the player exists",
            "if playerToKick then",
            "\t-- Kick the player with a custom message",
            "\tplayerToKick:Kick(\"Your message here\")",
            "else",
            "\t-- If the player doesn't exist, print an error message",
            "\tprint(\"Player not found!\")",
            "end"
        ],
        "description": "Kicks a player from the game"
    }
}
